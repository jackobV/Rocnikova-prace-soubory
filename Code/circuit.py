var_qubits = QuantumRegister(4, name='v')
clause_qubits = QuantumRegister(2, name='c')
cbits = ClassicalRegister(4, name='cbits')
output_qubit = QuantumRegister(1, name='out')
qc = QuantumCircuit(var_qubits, clause_qubits, output_qubit, cbits)
qc.initialize([1, -1]/np.sqrt(2), output_qubit)
qc.h(var_qubits)
qc.barrier()
sudoku_oracle(qc, clause_list, clause_qubits)
qc.barrier()
qc.append(diffuser(4), [0,1,2,3])
qc.measure(var_qubits, cbits)
qc.draw(fold=-1)
